AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  bookshelf

  Sample SAM Template for bookshelf

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    MemorySize: 128

Parameters:
  BookshelfUserPoolArn:
    Type: String
    Default: "None"

Conditions:
  WithApi: !Not [!Equals [!Ref BookshelfUserPoolArn, "None"]]
  NoApi: !Equals [!Ref BookshelfUserPoolArn, "None"]

Resources:
  BookshelfNoApiFunction:
    Condition: NoApi
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: BookshelfFunction
      Handler: bookshelf.App::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Bookshelf

  BookshelfWithApiFunction:
    Condition: WithApi
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: BookshelfFunction
      Handler: bookshelf.App::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      Environment:
        Variables:
          PARAM1: VALUE
          JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Bookshelf
      Events:
        BookshelfApiEvent:
          Type: Api
          Properties:
            Path: /books
            Method: get
            RestApiId: !Ref BookshelfApi

  BookshelfApi:
    Type: AWS::Serverless::Api
    Condition: WithApi
    Properties:
      StageName: Prod
      Cors:
        AllowHeaders: "'Content-Type, Authorization, X-Requested-With'"
        AllowMethods: "'OPTIONS'"
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: BookshelfAuth
        Authorizers:
          BookshelfAuth:
            UserPoolArn: !Ref BookshelfUserPoolArn

Outputs:
  BookshelfApi:
    Condition: WithApi
    Description: "API Gateway endpoint URL for Prod stage for Bookshelf function"
    Value: !Sub "https://${BookshelfApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/books/"
  BookshelfWithApiFunction:
    Condition: WithApi
    Description: "Bookshelf Lambda Function ARN"
    Value: !GetAtt BookshelfWithApiFunction.Arn
  BookshelfWithApiFunctionIamRole:
    Condition: WithApi
    Description: "Implicit IAM Role created for Bookshelf function"
    Value: !GetAtt BookshelfWithApiFunctionRole.Arn
  BookshelfNoApiFunction:
    Condition: NoApi
    Description: "Bookshelf Lambda Function ARN"
    Value: !GetAtt BookshelfNoApiFunction.Arn
  BookshelfNoApiFunctionIamRole:
    Condition: NoApi
    Description: "Implicit IAM Role created for Bookshelf function"
    Value: !GetAtt BookshelfNoApiFunctionRole.Arn
